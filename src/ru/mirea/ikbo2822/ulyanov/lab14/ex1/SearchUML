Исследуйте UML диаграмму классов на рисунке 1 и
понаблюдайте, как она выражает то, что мы говорили выше в словах.
Убедитесь, что вы понимаете все аспекты диаграммы.

IWaitList - интерфейс для управления WaitList
методы:
1.1 Добавление (элемент) void
1.2 удаление() элемент (или же E)
1.3 содержится ли элемент(элемент) boolean
1.4 все элементы (коллекция элементов) boolean
1.5 пустой? () boolean

WaitList представляет собой общий функционал для всех  списков
ожидания и релизует методы:
1.1 Конструктор()
1.2 Конструтор с параметром(коллекция элементов)
1.3 toString String

2 списка:
1) BoundedWaitList -(ограниченный список ожидания) - емкость задается при создании,
нельзя записать больще чем указано в capacity(емкости)
НАСЛЕДУЕТ WaitList
1.1 реализует методы:
1.2 конструктор(int вместительность)
1.3 получение вместительности()
1.4 добавление в очередь(элемент)
1.5 toString() String

2) UnfairWaitList - (несправедливый список ожидания) - позволяет удалить из очереди
элемент, находящийся где угодно в списке(в данном случае удалить первое вхождение),
так же можно реализовать так что бы элемент отправлялся в конец списка (перемещаем
в конец очереди)
НАСЛЕДУЕТ WaitList
1.1 конструктор
1.2 удаление(элемент) void
1.3 перемещение в конец списка(елемент) void

В итоге что я понял , это надо чтобы , если есть какие то события которые надо обработать,
что бы не было конфликтов когда все одновременно начинается выполняться.

выполнились 2 условия, которые запускают свои действия, 2 встало в очередь , 1 началов выполнение
выполнилось, 2 начало действовать.